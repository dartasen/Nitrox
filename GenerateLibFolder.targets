<Project>

    <PropertyGroup>
        <_NitroxMoveDependenciesToLibTaskName>MoveDependenciesToLib</_NitroxMoveDependenciesToLibTaskName>
        <_NitroxCleanLibFolderTaskName>CleanLibFolder</_NitroxCleanLibFolderTaskName>
        <_NitroxOutputFolder>lib\</_NitroxOutputFolder>
    </PropertyGroup>

    <Target Name="MoveDependenciesToLib" AfterTargets="Publish">
        <Message Importance="High"
                 Text="Running $(_NitroxMoveDependenciesToLibTaskName) on $(MSBuildProjectName)" />
        
        <PropertyGroup>
            <OutputDirectory>$(PublishDir)$(_NitroxOutputFolder)</OutputDirectory>
        </PropertyGroup>

        <ItemGroup>
            <ExecutableFiles Include="$(PublishDir)*.exe" />
            <DependenciesFile
                Include="$(PublishDir)*.dll;$(PublishDir)*.dll.config;$(PublishDir)*.deps.json"
                Exclude="$(PublishDir)*.exe;$(PublishDir)*.runtimeconfig.json"
            />
            <!-- Makes sure that the main dll of the executable files are next to each other -->
            <DependenciesFile Remove="$(PublishDir)%(ExecutableFiles.Filename).dll" />
            <!-- Makes sure that the native dependency json files of the executable files are next to each other -->
            <DependenciesFile Remove="$(PublishDir)%(ExecutableFiles.Filename).deps.json" />
        </ItemGroup>

        <!-- Create directory if it doesn't exist -->
        <MakeDir Directories="$(OutputDirectory)"
                 Condition="!Exists('$(OutputDirectory)')"
                 ContinueOnError="WarnAndContinue" />

        <!-- Copy in debug because some systems break when they don't use our assembly resolve to look inside lib folder -->
        <Copy SourceFiles="@(DependenciesFile)"
              DestinationFolder="$(OutputDirectory)"
              OverwriteReadOnlyFiles="True"
              Condition="'$(Configuration)' == 'Debug'"
              ContinueOnError="ErrorAndContinue" />

        <!-- Move every matching files to OutputDirectory -->
        <Move SourceFiles="@(DependenciesFile)"
              DestinationFolder="$(OutputDirectory)"
              OverwriteReadOnlyFiles="True"
              Condition="'$(Configuration)' == 'Release'"
              ContinueOnError="ErrorAndContinue" />
    </Target>

    <!-- Remove our lib folder when we're using the solution/project clean -->
    <Target Name="CleanLibFolder" AfterTargets="AfterClean">
        <Message Importance="High"
                 Text="Running $(_NitroxCleanLibFolderTaskName) on $(MSBuildProjectName)" />

        <RemoveDir Directories="$(TargetDir)$(_NitroxOutputFolder)"
                   Condition="Exists('$(TargetDir)$(_NitroxOutputFolder)')"
                   ContinueOnError="WarnAndContinue" />
    </Target>

</Project>
