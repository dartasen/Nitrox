<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <OutputType>WinExe</OutputType>
        <TargetFramework>net8.0</TargetFramework>
        <BuiltInComInteropSupport>true</BuiltInComInteropSupport>
        <AvaloniaNameGeneratorIsEnabled>true</AvaloniaNameGeneratorIsEnabled>
        <ApplicationManifest>app.manifest</ApplicationManifest>
        <SatelliteResourceLanguages>en-US</SatelliteResourceLanguages>
        <ApplicationIcon>Assets\Images\nitrox-icon.ico</ApplicationIcon>
        <PublishTrimmed>false</PublishTrimmed>
    </PropertyGroup>
    
    <!-- MacOS specific -->
    <ItemGroup Condition="$(Configuration) == 'Release' AND ($(RuntimeIdentifier) == 'osx-x64' OR $(RuntimeIdentifier) == 'osx-arm64')">
        <None Update="Platforms\MacOS\Info.plist">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            <TargetPath>Contents\Info.plist</TargetPath>
        </None>
        <None Update="Platforms\MacOS\Entitlements.plist">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            <TargetPath>Contents\Entitlements.plist</TargetPath>
        </None>
        <None Update="Platforms\MacOS\Nitrox.icns">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            <TargetPath>Contents\Resources\Nitrox.icns</TargetPath>
        </None>
    </ItemGroup>
    
    <PropertyGroup Condition="$(Configuration) == 'Release' AND ($(RuntimeIdentifier) == 'osx-x64' OR $(RuntimeIdentifier) == 'osx-arm64')">
        <!-- https://learn.microsoft.com/en-us/dotnet/core/install/macos-notarization-issues#native-apphost -->
        <UseAppHost>true</UseAppHost>
        <SelfContained>true</SelfContained>
    </PropertyGroup>
    
    <ItemGroup>
        <AvaloniaResource Include="Assets\**" />
    </ItemGroup>

    <ItemGroup>
        <TrimmerRootDescriptor Include="Roots.xml" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Avalonia" Version="11.1.3" />
        <PackageReference Include="Avalonia.Desktop" Version="11.1.3" />
        <PackageReference Include="Avalonia.ReactiveUI" Version="11.1.3" />
        <PackageReference Include="Avalonia.Themes.Fluent" Version="11.1.3" />
        <PackageReference Condition="'$(Configuration)' == 'Debug'" Include="Avalonia.Diagnostics" Version="11.1.3" />
        <PackageReference Include="Avalonia.Xaml.Interactions" Version="11.1.0" />
        <PackageReference Include="Avalonia.Xaml.Interactivity" Version="11.1.0" />
        <PackageReference Include="CommunityToolkit.Mvvm" Version="8.2.2" />
        <PackageReference Include="dnlib" Version="4.4.0" />
        <PackageReference Include="HanumanInstitute.MvvmDialogs.Avalonia" Version="2.1.0" />
        <PackageReference Include="LitJson" Version="0.19.0" />
        <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="8.0.0" />
        <PackageReference Include="ReactiveUI.Validation" Version="4.0.9" />
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\NitroxModel\NitroxModel.csproj" />
        <ProjectReference Include="..\NitroxServer\NitroxServer.csproj" />
    </ItemGroup>

    <!-- Generate lib folders for project dependencies -->
    <Import Project="..\GenerateLibFolder.props" />

    <Target Name="MoveNitroxAssetsToLauncherOutput" AfterTargets="$(_NitroxMoveDependenciesToLibTaskName)">
        <Message Importance="High" Text="Running MoveNitroxAssetsToLauncherOutput" />

        <ItemGroup>
            <NitroxSubnauticaAssets Include="..\Nitrox.Assets.Subnautica\**\*." />
            <NitroxSubnauticaStaticDlls Include="..\Nitrox.Assets.Subnautica\**\*.dll" />
            <NitroxSubnauticaLanguageFiles Include="..\Nitrox.Assets.Subnautica\LanguageFiles\*.json" />
            <NitroxSubnauticaResources Include="..\Nitrox.Assets.Subnautica\Resources\*.*" />
        </ItemGroup>
        <Copy SourceFiles="@(NitroxSubnauticaAssets)" DestinationFolder="$(TargetDir)\Resources\%(RecursiveDir)" />
        <Copy SourceFiles="@(NitroxSubnauticaStaticDlls)" DestinationFolder="$(TargetDir)\lib\%(RecursiveDir)" SkipUnchangedFiles="true" />
        <Copy SourceFiles="@(NitroxSubnauticaLanguageFiles)" DestinationFolder="$(TargetDir)\Resources\LanguageFiles\%(RecursiveDir)" />
        <Copy SourceFiles="@(NitroxSubnauticaResources)" DestinationFolder="$(TargetDir)\Resources\%(RecursiveDir)" />
    </Target>

    <!-- Build dependencies that will be loaded by the game, which must be net472 compatible -->
    <Target Name="BuildNet472BinariesForGame" AfterTargets="$(_NitroxMoveDependenciesToLibTaskName)">
        <Message Importance="High" Text="Running BuildNet472BinariesForGame" />

        <PropertyGroup>
            <OutputDirectory>$(TargetDir)lib\net472</OutputDirectory>
        </PropertyGroup>

        <!-- Create directory if it doesn't exist -->
        <MakeDir Directories="$(OutputDirectory)" Condition="!Exists('$(OutputDirectory)')" ContinueOnError="WarnAndContinue" />

         <!-- MSBuild project build target with OutputPath somehow doesn't work -->
        <Exec Command="dotnet msbuild ../NitroxPatcher/NitroxPatcher.csproj -t:Build -p:Configuration=$(Configuration) -p:TargetFramework=net472 -p:OutputPath=$(OutputDirectory)" />
    </Target>

    <Target Name="BuildServer" AfterTargets="Build" BeforeTargets="$(_NitroxMoveDependenciesToLibTaskName)">
        <Message Importance="High" Text="Running BuildServer" />

        <PropertyGroup>
            <OutputDirectory>$(TargetDir)</OutputDirectory>
        </PropertyGroup>

        <!-- Create directory if it doesn't exist -->
        <MakeDir Directories="$(OutputDirectory)" Condition="!Exists('$(OutputDirectory)')" ContinueOnError="WarnAndContinue" />

        <!-- MSBuild project build target with OutputPath somehow doesn't work -->
        <Exec Command="dotnet msbuild ../NitroxServer-Subnautica/NitroxServer-Subnautica.csproj -t:Build -p:Configuration=$(Configuration) -p:OutputPath=$(OutputDirectory)" />
    </Target>
</Project>
